//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace sendsms_vote.sms_srv {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DorsaSmsWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class DorsaSmsWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageFromDorsaPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendsingleMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmsSentBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DorsaSmsWebService() {
            this.Url = global::sendsms_vote.Properties.Settings.Default.sendsms_vote_sms_srv_DorsaSmsWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event SendMessageFromDorsaPortalCompletedEventHandler SendMessageFromDorsaPortalCompleted;
        
        /// <remarks/>
        public event SendsingleMessageCompletedEventHandler SendsingleMessageCompleted;
        
        /// <remarks/>
        public event SmsSentBoxCompletedEventHandler SmsSentBoxCompleted;
        
        /// <remarks/>
        public event getCreditCompletedEventHandler getCreditCompleted;
        
        /// <remarks/>
        public event getInboxCompletedEventHandler getInboxCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendMessage(string username, string password, Message sms) {
            object[] results = this.Invoke("SendMessage", new object[] {
                        username,
                        password,
                        sms});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageAsync(string username, string password, Message sms) {
            this.SendMessageAsync(username, password, sms, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(string username, string password, Message sms, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        username,
                        password,
                        sms}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessageFromDorsaPortal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendMessageFromDorsaPortal(string userName, string password, string from, string[] recieversNumber, string text, System.DateTime date, string portalIdentity) {
            object[] results = this.Invoke("SendMessageFromDorsaPortal", new object[] {
                        userName,
                        password,
                        from,
                        recieversNumber,
                        text,
                        date,
                        portalIdentity});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageFromDorsaPortalAsync(string userName, string password, string from, string[] recieversNumber, string text, System.DateTime date, string portalIdentity) {
            this.SendMessageFromDorsaPortalAsync(userName, password, from, recieversNumber, text, date, portalIdentity, null);
        }
        
        /// <remarks/>
        public void SendMessageFromDorsaPortalAsync(string userName, string password, string from, string[] recieversNumber, string text, System.DateTime date, string portalIdentity, object userState) {
            if ((this.SendMessageFromDorsaPortalOperationCompleted == null)) {
                this.SendMessageFromDorsaPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageFromDorsaPortalOperationCompleted);
            }
            this.InvokeAsync("SendMessageFromDorsaPortal", new object[] {
                        userName,
                        password,
                        from,
                        recieversNumber,
                        text,
                        date,
                        portalIdentity}, this.SendMessageFromDorsaPortalOperationCompleted, userState);
        }
        
        private void OnSendMessageFromDorsaPortalOperationCompleted(object arg) {
            if ((this.SendMessageFromDorsaPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageFromDorsaPortalCompleted(this, new SendMessageFromDorsaPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendsingleMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendsingleMessage(string userName, string password, string from, string recieversNumber, string text) {
            object[] results = this.Invoke("SendsingleMessage", new object[] {
                        userName,
                        password,
                        from,
                        recieversNumber,
                        text});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendsingleMessageAsync(string userName, string password, string from, string recieversNumber, string text) {
            this.SendsingleMessageAsync(userName, password, from, recieversNumber, text, null);
        }
        
        /// <remarks/>
        public void SendsingleMessageAsync(string userName, string password, string from, string recieversNumber, string text, object userState) {
            if ((this.SendsingleMessageOperationCompleted == null)) {
                this.SendsingleMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendsingleMessageOperationCompleted);
            }
            this.InvokeAsync("SendsingleMessage", new object[] {
                        userName,
                        password,
                        from,
                        recieversNumber,
                        text}, this.SendsingleMessageOperationCompleted, userState);
        }
        
        private void OnSendsingleMessageOperationCompleted(object arg) {
            if ((this.SendsingleMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendsingleMessageCompleted(this, new SendsingleMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SmsSentBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SmsSentBox(string userName, string password, string from, string recieversNumber, string text, string Sdate, string Edate, int sendStatus, int deliveryStatus, int moduleId, int count) {
            object[] results = this.Invoke("SmsSentBox", new object[] {
                        userName,
                        password,
                        from,
                        recieversNumber,
                        text,
                        Sdate,
                        Edate,
                        sendStatus,
                        deliveryStatus,
                        moduleId,
                        count});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SmsSentBoxAsync(string userName, string password, string from, string recieversNumber, string text, string Sdate, string Edate, int sendStatus, int deliveryStatus, int moduleId, int count) {
            this.SmsSentBoxAsync(userName, password, from, recieversNumber, text, Sdate, Edate, sendStatus, deliveryStatus, moduleId, count, null);
        }
        
        /// <remarks/>
        public void SmsSentBoxAsync(string userName, string password, string from, string recieversNumber, string text, string Sdate, string Edate, int sendStatus, int deliveryStatus, int moduleId, int count, object userState) {
            if ((this.SmsSentBoxOperationCompleted == null)) {
                this.SmsSentBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmsSentBoxOperationCompleted);
            }
            this.InvokeAsync("SmsSentBox", new object[] {
                        userName,
                        password,
                        from,
                        recieversNumber,
                        text,
                        Sdate,
                        Edate,
                        sendStatus,
                        deliveryStatus,
                        moduleId,
                        count}, this.SmsSentBoxOperationCompleted, userState);
        }
        
        private void OnSmsSentBoxOperationCompleted(object arg) {
            if ((this.SmsSentBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmsSentBoxCompleted(this, new SmsSentBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Creidt getCredit(string username, string password) {
            object[] results = this.Invoke("getCredit", new object[] {
                        username,
                        password});
            return ((Creidt)(results[0]));
        }
        
        /// <remarks/>
        public void getCreditAsync(string username, string password) {
            this.getCreditAsync(username, password, null);
        }
        
        /// <remarks/>
        public void getCreditAsync(string username, string password, object userState) {
            if ((this.getCreditOperationCompleted == null)) {
                this.getCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCreditOperationCompleted);
            }
            this.InvokeAsync("getCredit", new object[] {
                        username,
                        password}, this.getCreditOperationCompleted, userState);
        }
        
        private void OngetCreditOperationCompleted(object arg) {
            if ((this.getCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCreditCompleted(this, new getCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getInbox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReceiveResult getInbox(string username, string password, string serviceNumber, string boxCode, int count) {
            object[] results = this.Invoke("getInbox", new object[] {
                        username,
                        password,
                        serviceNumber,
                        boxCode,
                        count});
            return ((ReceiveResult)(results[0]));
        }
        
        /// <remarks/>
        public void getInboxAsync(string username, string password, string serviceNumber, string boxCode, int count) {
            this.getInboxAsync(username, password, serviceNumber, boxCode, count, null);
        }
        
        /// <remarks/>
        public void getInboxAsync(string username, string password, string serviceNumber, string boxCode, int count, object userState) {
            if ((this.getInboxOperationCompleted == null)) {
                this.getInboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInboxOperationCompleted);
            }
            this.InvokeAsync("getInbox", new object[] {
                        username,
                        password,
                        serviceNumber,
                        boxCode,
                        count}, this.getInboxOperationCompleted, userState);
        }
        
        private void OngetInboxOperationCompleted(object arg) {
            if ((this.getInboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInboxCompleted(this, new getInboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangePassword(string username, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        username,
                        oldPassword,
                        newPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string username, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(username, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string username, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        username,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Message {
        
        private string fromField;
        
        private string toField;
        
        private string textField;
        
        private string dateField;
        
        /// <remarks/>
        public string From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReceiveResult {
        
        private int statusField;
        
        private Message[] messagesField;
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public Message[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Creidt {
        
        private int statusField;
        
        private int creditField;
        
        private int usedField;
        
        private int remindField;
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public int Used {
            get {
                return this.usedField;
            }
            set {
                this.usedField = value;
            }
        }
        
        /// <remarks/>
        public int Remind {
            get {
                return this.remindField;
            }
            set {
                this.remindField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMessageCompletedEventHandler(object sender, SendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMessageFromDorsaPortalCompletedEventHandler(object sender, SendMessageFromDorsaPortalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageFromDorsaPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageFromDorsaPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendsingleMessageCompletedEventHandler(object sender, SendsingleMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendsingleMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendsingleMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SmsSentBoxCompletedEventHandler(object sender, SmsSentBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmsSentBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmsSentBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCreditCompletedEventHandler(object sender, getCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Creidt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Creidt)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getInboxCompletedEventHandler(object sender, getInboxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiveResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiveResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591